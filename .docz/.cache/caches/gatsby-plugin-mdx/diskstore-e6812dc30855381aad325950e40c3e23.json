{"expireTime":9007200835905916000,"key":"gatsby-plugin-mdx-entire-payload-957215660352340c300e94ce8426d1d5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/Users/Roach/Desktop/frontend-toolbox/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":118,"offset":119},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":121},"end":{"line":5,"column":29,"offset":149},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useTimer","position":{"start":{"line":7,"column":3,"offset":153},"end":{"line":7,"column":11,"offset":161},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":151},"end":{"line":7,"column":11,"offset":161},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"⏱ easily handle timing","position":{"start":{"line":8,"column":3,"offset":165},"end":{"line":8,"column":25,"offset":187},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":165},"end":{"line":9,"column":5,"offset":193},"indent":[1]}}],"position":{"start":{"line":8,"column":1,"offset":163},"end":{"line":9,"column":5,"offset":193},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.npmjs.com/package/@snappmarket/use-timer","children":[{"type":"image","title":null,"url":"https://img.shields.io/npm/v/@snappmarket/use-timer.svg?style=flat-square","alt":"version","position":{"start":{"line":11,"column":2,"offset":198},"end":{"line":11,"column":87,"offset":283},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":197},"end":{"line":11,"column":142,"offset":338},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":11,"column":142,"offset":338},"end":{"line":12,"column":1,"offset":340},"indent":[1]}},{"type":"link","title":null,"url":"http://www.npmtrends.com/@snappmarket/use-timer","children":[{"type":"image","title":null,"url":"https://img.shields.io/npm/dm/@snappmarket/use-timer.svg?style=flat-square","alt":"downloads","position":{"start":{"line":12,"column":2,"offset":341},"end":{"line":12,"column":90,"offset":429},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":340},"end":{"line":12,"column":140,"offset":479},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":12,"column":140,"offset":479},"end":{"line":13,"column":1,"offset":481},"indent":[1]}},{"type":"link","title":null,"url":"http://makeapullrequest.com","children":[{"type":"image","title":null,"url":"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square","alt":"PRs Welcome","position":{"start":{"line":13,"column":2,"offset":482},"end":{"line":13,"column":92,"offset":572},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":481},"end":{"line":13,"column":122,"offset":602},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":122,"offset":602},"end":{"line":14,"column":1,"offset":604},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/snappmarket/frontend-toolbox/tree/master/packages/useDidUpdateEffect/blob/master/LICENSE.md","children":[{"type":"image","title":null,"url":"https://img.shields.io/npm/l/@snappmarket/use-timer.svg?style=flat-square","alt":"MIT License","position":{"start":{"line":14,"column":2,"offset":605},"end":{"line":14,"column":91,"offset":694},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":604},"end":{"line":14,"column":204,"offset":807},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":197},"end":{"line":14,"column":204,"offset":807},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/snappmarket/frontend-toolbox/watchers","children":[{"type":"image","title":null,"url":"https://img.shields.io/github/watchers/snappmarket/frontend-toolbox.svg?style=social","alt":"Watch on GitHub","position":{"start":{"line":16,"column":2,"offset":812},"end":{"line":16,"column":106,"offset":916},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":811},"end":{"line":16,"column":165,"offset":975},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":165,"offset":975},"end":{"line":17,"column":1,"offset":977},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/snappmarket/frontend-toolbox/stargazers","children":[{"type":"image","title":null,"url":"https://img.shields.io/github/stars/snappmarket/frontend-toolbox.svg?style=social","alt":"Star on GitHub","position":{"start":{"line":17,"column":2,"offset":978},"end":{"line":17,"column":102,"offset":1078},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":977},"end":{"line":17,"column":163,"offset":1139},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":811},"end":{"line":17,"column":163,"offset":1139},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"get started","position":{"start":{"line":20,"column":4,"offset":1148},"end":{"line":20,"column":15,"offset":1159},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1145},"end":{"line":20,"column":16,"offset":1160},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We provide two way of using this package ","position":{"start":{"line":21,"column":1,"offset":1162},"end":{"line":21,"column":42,"offset":1203},"indent":[]}},{"type":"inlineCode","value":"single","position":{"start":{"line":21,"column":42,"offset":1203},"end":{"line":21,"column":50,"offset":1211},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":21,"column":50,"offset":1211},"end":{"line":21,"column":54,"offset":1215},"indent":[]}},{"type":"inlineCode","value":"multi","position":{"start":{"line":21,"column":54,"offset":1215},"end":{"line":21,"column":61,"offset":1222},"indent":[]}},{"type":"text","value":" :","position":{"start":{"line":21,"column":61,"offset":1222},"end":{"line":21,"column":63,"offset":1224},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1162},"end":{"line":21,"column":63,"offset":1224},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"npm i @snappmarket/use-timer\nOR\nnpm i @snappmarket/hooks","position":{"start":{"line":22,"column":1,"offset":1226},"end":{"line":26,"column":4,"offset":1298},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"usage","position":{"start":{"line":28,"column":4,"offset":1305},"end":{"line":28,"column":9,"offset":1310},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1302},"end":{"line":28,"column":10,"offset":1311},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import useTimer from '@snappmarket/use-timer';\n// or \n// import { useTimer } from '@snappmarket/hooks';\n\n\nconst MyComponenet = props => {\n  const { time, start: startTimer, reset: resetTimer } = useTimer({\n    endTime: 0,\n    initialTime: 100,\n    timerType: 'DECREMENTAL',\n  });\n};","position":{"start":{"line":29,"column":1,"offset":1313},"end":{"line":42,"column":4,"offset":1626},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"source code","position":{"start":{"line":44,"column":5,"offset":1634},"end":{"line":44,"column":16,"offset":1645},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1630},"end":{"line":44,"column":16,"offset":1645},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import { useEffect, useRef, useState } from 'react';\n\n/**\n * Will count till time or increase time\n * @param config\n * @returns {{start: *, reset: *, time: *, pause: *}}\n */\nexport default config => {\n  const initialConfig = {\n    endTime    : null,\n    initialTime: 0,\n    interval   : 1000,\n    step       : 1,\n    timerType  : 'INCREMENTAL'\n  };\n\n  const { endTime, initialTime, interval, step, timerType } = {\n    ...initialConfig,\n    ...config\n  };\n  const intervalRef = useRef(null);\n  const pausedTimeRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const [shouldResetTime, setShouldResetTime] = useState(false);\n  const [time, setTime] = useState(initialTime);\n  const cancelTimers = () => {\n    cancelInterval();\n    cancelTimeout();\n  };\n  const cancelInterval = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  };\n  const cancelTimeout = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  const createInterval = () => {\n    intervalRef.current = setInterval(() => {\n      setTime(previousTime =>\n        timerType === 'INCREMENTAL' ? previousTime + step : previousTime - step);\n    }, interval);\n  };\n  const createTimeout = () => {\n    if (endTime === null) {\n      return;\n    }\n    const delay\n      = Math.abs(endTime - (pausedTimeRef.current || initialTime)) * interval;\n    timeoutRef.current = setTimeout(() => {\n      cancelInterval();\n      setShouldResetTime(true);\n    }, delay);\n  };\n  const pause = () => {\n    pausedTimeRef.current = time;\n    cancelTimers();\n  };\n  const reset = () => {\n    pausedTimeRef.current = null;\n    cancelTimers();\n    resetTime();\n  };\n\n  const resetTime = () => {\n    setTime(initialTime);\n  };\n\n  const start = () => {\n    if (intervalRef.current) {\n      return;\n    }\n    if (shouldResetTime) {\n      resetTime();\n      setShouldResetTime(false);\n    }\n    createInterval();\n    createTimeout();\n  };\n  useEffect(() => cancelTimers, []);\n\n  /**\n   * Cancel all timers and start my timer at mount\n   */\n  useEffect(() => {\n    cancelTimers();\n    start();\n\n    return cancelTimeout;\n  }, []);\n\n  return { pause, reset, start, time };\n};","position":{"start":{"line":45,"column":1,"offset":1647},"end":{"line":143,"column":4,"offset":4012},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":148,"column":1,"offset":4020},"end":{"line":148,"column":31,"offset":4050},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":148,"column":31,"offset":4050}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/Roach/Desktop/frontend-toolbox/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usetimer\"\n    }}>{`useTimer`}</h1>\n    <blockquote>\n      <h2 parentName=\"blockquote\" {...{\n        \"id\": \"-easily-handle-timing\"\n      }}>{`⏱ easily handle timing`}</h2>\n    </blockquote>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@snappmarket/use-timer\"\n      }}><img alt=\"version\" src=\"https://img.shields.io/npm/v/@snappmarket/use-timer.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://www.npmtrends.com/@snappmarket/use-timer\"\n      }}><img alt=\"downloads\" src=\"https://img.shields.io/npm/dm/@snappmarket/use-timer.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://makeapullrequest.com\"\n      }}><img alt=\"PRs Welcome\" src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/snappmarket/frontend-toolbox/tree/master/packages/useDidUpdateEffect/blob/master/LICENSE.md\"\n      }}><img alt=\"MIT License\" src=\"https://img.shields.io/npm/l/@snappmarket/use-timer.svg?style=flat-square\" /></a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/snappmarket/frontend-toolbox/watchers\"\n      }}><img alt=\"Watch on GitHub\" src=\"https://img.shields.io/github/watchers/snappmarket/frontend-toolbox.svg?style=social\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/snappmarket/frontend-toolbox/stargazers\"\n      }}><img alt=\"Star on GitHub\" src=\"https://img.shields.io/github/stars/snappmarket/frontend-toolbox.svg?style=social\" /></a></p>\n    <h2 {...{\n      \"id\": \"get-started\"\n    }}>{`get started`}</h2>\n    <p>{`We provide two way of using this package `}<inlineCode parentName=\"p\">{`single`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`multi`}</inlineCode>{` :`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @snappmarket/use-timer\nOR\nnpm i @snappmarket/hooks\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import useTimer from '@snappmarket/use-timer';\n// or \n// import { useTimer } from '@snappmarket/hooks';\n\n\nconst MyComponenet = props => {\n  const { time, start: startTimer, reset: resetTimer } = useTimer({\n    endTime: 0,\n    initialTime: 100,\n    timerType: 'DECREMENTAL',\n  });\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`source code`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useEffect, useRef, useState } from 'react';\n\n/**\n * Will count till time or increase time\n * @param config\n * @returns {{start: *, reset: *, time: *, pause: *}}\n */\nexport default config => {\n  const initialConfig = {\n    endTime    : null,\n    initialTime: 0,\n    interval   : 1000,\n    step       : 1,\n    timerType  : 'INCREMENTAL'\n  };\n\n  const { endTime, initialTime, interval, step, timerType } = {\n    ...initialConfig,\n    ...config\n  };\n  const intervalRef = useRef(null);\n  const pausedTimeRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const [shouldResetTime, setShouldResetTime] = useState(false);\n  const [time, setTime] = useState(initialTime);\n  const cancelTimers = () => {\n    cancelInterval();\n    cancelTimeout();\n  };\n  const cancelInterval = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  };\n  const cancelTimeout = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  const createInterval = () => {\n    intervalRef.current = setInterval(() => {\n      setTime(previousTime =>\n        timerType === 'INCREMENTAL' ? previousTime + step : previousTime - step);\n    }, interval);\n  };\n  const createTimeout = () => {\n    if (endTime === null) {\n      return;\n    }\n    const delay\n      = Math.abs(endTime - (pausedTimeRef.current || initialTime)) * interval;\n    timeoutRef.current = setTimeout(() => {\n      cancelInterval();\n      setShouldResetTime(true);\n    }, delay);\n  };\n  const pause = () => {\n    pausedTimeRef.current = time;\n    cancelTimers();\n  };\n  const reset = () => {\n    pausedTimeRef.current = null;\n    cancelTimers();\n    resetTime();\n  };\n\n  const resetTime = () => {\n    setTime(initialTime);\n  };\n\n  const start = () => {\n    if (intervalRef.current) {\n      return;\n    }\n    if (shouldResetTime) {\n      resetTime();\n      setShouldResetTime(false);\n    }\n    createInterval();\n    createTimeout();\n  };\n  useEffect(() => cancelTimers, []);\n\n  /**\n   * Cancel all timers and start my timer at mount\n   */\n  useEffect(() => {\n    cancelTimers();\n    start();\n\n    return cancelTimeout;\n  }, []);\n\n  return { pause, reset, start, time };\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}