{"expireTime":9007200835905916000,"key":"gatsby-plugin-mdx-entire-payload-97c61de508f9edf9b0c09042234df29c-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/Users/Roach/Desktop/frontend-toolbox/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":118,"offset":119},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":121},"end":{"line":5,"column":29,"offset":149},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useForceUpdate","position":{"start":{"line":7,"column":3,"offset":153},"end":{"line":7,"column":17,"offset":167},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":151},"end":{"line":7,"column":17,"offset":167},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"üëø force update component","position":{"start":{"line":8,"column":3,"offset":171},"end":{"line":8,"column":28,"offset":196},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":171},"end":{"line":9,"column":5,"offset":202},"indent":[1]}}],"position":{"start":{"line":8,"column":1,"offset":169},"end":{"line":9,"column":5,"offset":202},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.npmjs.com/package/@snappmarket/use-force-update","children":[{"type":"image","title":null,"url":"https://img.shields.io/npm/v/@snappmarket/use-force-update.svg?style=flat-square","alt":"version","position":{"start":{"line":11,"column":2,"offset":207},"end":{"line":11,"column":94,"offset":299},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":206},"end":{"line":11,"column":156,"offset":361},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":11,"column":156,"offset":361},"end":{"line":12,"column":1,"offset":363},"indent":[1]}},{"type":"link","title":null,"url":"http://www.npmtrends.com/@snappmarket/use-force-update","children":[{"type":"image","title":null,"url":"https://img.shields.io/npm/dm/@snappmarket/use-force-update.svg?style=flat-square","alt":"downloads","position":{"start":{"line":12,"column":2,"offset":364},"end":{"line":12,"column":97,"offset":459},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":363},"end":{"line":12,"column":154,"offset":516},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":12,"column":154,"offset":516},"end":{"line":13,"column":1,"offset":518},"indent":[1]}},{"type":"link","title":null,"url":"http://makeapullrequest.com","children":[{"type":"image","title":null,"url":"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square","alt":"PRs Welcome","position":{"start":{"line":13,"column":2,"offset":519},"end":{"line":13,"column":92,"offset":609},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":518},"end":{"line":13,"column":122,"offset":639},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":122,"offset":639},"end":{"line":14,"column":1,"offset":641},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/snappmarket/frontend-toolbox/tree/master/packages/useDidUpdateEffect/blob/master/LICENSE.md","children":[{"type":"image","title":null,"url":"https://img.shields.io/npm/l/@snappmarket/use-force-update.svg?style=flat-square","alt":"MIT License","position":{"start":{"line":14,"column":2,"offset":642},"end":{"line":14,"column":98,"offset":738},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":641},"end":{"line":14,"column":211,"offset":851},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":206},"end":{"line":14,"column":211,"offset":851},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/snappmarket/frontend-toolbox/watchers","children":[{"type":"image","title":null,"url":"https://img.shields.io/github/watchers/snappmarket/frontend-toolbox.svg?style=social","alt":"Watch on GitHub","position":{"start":{"line":16,"column":2,"offset":856},"end":{"line":16,"column":106,"offset":960},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":855},"end":{"line":16,"column":165,"offset":1019},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":165,"offset":1019},"end":{"line":17,"column":1,"offset":1021},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/snappmarket/frontend-toolbox/stargazers","children":[{"type":"image","title":null,"url":"https://img.shields.io/github/stars/snappmarket/frontend-toolbox.svg?style=social","alt":"Star on GitHub","position":{"start":{"line":17,"column":2,"offset":1022},"end":{"line":17,"column":102,"offset":1122},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1021},"end":{"line":17,"column":163,"offset":1183},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":855},"end":{"line":17,"column":163,"offset":1183},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"get started","position":{"start":{"line":20,"column":4,"offset":1192},"end":{"line":20,"column":15,"offset":1203},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1189},"end":{"line":20,"column":16,"offset":1204},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We provide two way of using this package ","position":{"start":{"line":21,"column":1,"offset":1206},"end":{"line":21,"column":42,"offset":1247},"indent":[]}},{"type":"inlineCode","value":"single","position":{"start":{"line":21,"column":42,"offset":1247},"end":{"line":21,"column":50,"offset":1255},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":21,"column":50,"offset":1255},"end":{"line":21,"column":54,"offset":1259},"indent":[]}},{"type":"inlineCode","value":"multi","position":{"start":{"line":21,"column":54,"offset":1259},"end":{"line":21,"column":61,"offset":1266},"indent":[]}},{"type":"text","value":" :","position":{"start":{"line":21,"column":61,"offset":1266},"end":{"line":21,"column":63,"offset":1268},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1206},"end":{"line":21,"column":63,"offset":1268},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"npm i @snappmarket/use-force-update\nOR\nnpm i @snappmarket/hooks","position":{"start":{"line":22,"column":1,"offset":1270},"end":{"line":26,"column":4,"offset":1349},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"usage","position":{"start":{"line":28,"column":4,"offset":1356},"end":{"line":28,"column":9,"offset":1361},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1353},"end":{"line":28,"column":10,"offset":1362},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import useForceUpdate from '@snappmarket/use-force-update';\n// or \n// import { useForceUpdate } from '@snappmarket/hooks';\n\n\nconst MyComponenet = props => {\n  const forceUpdate = useForceUpdate(null);\n\n  const handleSomeThing = () => {\n    // do some thing\n    forceUpdate();\n  };\n\n  return (<div>meow üê±‚Äç</div>)\n};","position":{"start":{"line":29,"column":1,"offset":1364},"end":{"line":45,"column":4,"offset":1713},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"source code","position":{"start":{"line":47,"column":5,"offset":1721},"end":{"line":47,"column":16,"offset":1732},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1717},"end":{"line":47,"column":16,"offset":1732},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import { useState, useCallback } from 'react';\n\n/**\n * Force component re-render\n * @returns {Function}\n */\nexport default function useForceUpdate() {\n  const [, setTick] = useState(0);\n  return useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n}","position":{"start":{"line":48,"column":1,"offset":1734},"end":{"line":61,"column":4,"offset":2022},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":64,"column":1,"offset":2026},"end":{"line":64,"column":31,"offset":2056},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":31,"offset":2056}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/Roach/Desktop/frontend-toolbox/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"useforceupdate\"\n    }}>{`useForceUpdate`}</h1>\n    <blockquote>\n      <h2 parentName=\"blockquote\" {...{\n        \"id\": \"-force-update-component\"\n      }}>{`üëø force update component`}</h2>\n    </blockquote>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@snappmarket/use-force-update\"\n      }}><img alt=\"version\" src=\"https://img.shields.io/npm/v/@snappmarket/use-force-update.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://www.npmtrends.com/@snappmarket/use-force-update\"\n      }}><img alt=\"downloads\" src=\"https://img.shields.io/npm/dm/@snappmarket/use-force-update.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://makeapullrequest.com\"\n      }}><img alt=\"PRs Welcome\" src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/snappmarket/frontend-toolbox/tree/master/packages/useDidUpdateEffect/blob/master/LICENSE.md\"\n      }}><img alt=\"MIT License\" src=\"https://img.shields.io/npm/l/@snappmarket/use-force-update.svg?style=flat-square\" /></a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/snappmarket/frontend-toolbox/watchers\"\n      }}><img alt=\"Watch on GitHub\" src=\"https://img.shields.io/github/watchers/snappmarket/frontend-toolbox.svg?style=social\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/snappmarket/frontend-toolbox/stargazers\"\n      }}><img alt=\"Star on GitHub\" src=\"https://img.shields.io/github/stars/snappmarket/frontend-toolbox.svg?style=social\" /></a></p>\n    <h2 {...{\n      \"id\": \"get-started\"\n    }}>{`get started`}</h2>\n    <p>{`We provide two way of using this package `}<inlineCode parentName=\"p\">{`single`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`multi`}</inlineCode>{` :`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @snappmarket/use-force-update\nOR\nnpm i @snappmarket/hooks\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import useForceUpdate from '@snappmarket/use-force-update';\n// or \n// import { useForceUpdate } from '@snappmarket/hooks';\n\n\nconst MyComponenet = props => {\n  const forceUpdate = useForceUpdate(null);\n\n  const handleSomeThing = () => {\n    // do some thing\n    forceUpdate();\n  };\n\n  return (<div>meow üê±‚Äç</div>)\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`source code`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useState, useCallback } from 'react';\n\n/**\n * Force component re-render\n * @returns {Function}\n */\nexport default function useForceUpdate() {\n  const [, setTick] = useState(0);\n  return useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}