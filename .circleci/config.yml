version: 2

aliases:
  - &docker
    - image: circleci/openjdk:8-jdk-node-browsers

  - &environment
    TZ: /usr/share/zoneinfo/America/Los_Angeles

  - &restore_yarn_cache
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v2-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v2-node-{{ arch }}-{{ .Branch }}-
        - v2-node-{{ arch }}-
  - &run_yarn
    run:
      name: Link and Install Packages
      command: yarn link && yarn --frozen-lockfile

jobs:
  main:
    docker: *docker
    environment: *environment

    steps:
      - checkout
      - run:
          name: Nodejs Version
          command: node --version
      - *restore_yarn_cache
      - *run_yarn

      # cache node_modules and etc
      - save_cache:
          name: Save node_modules cache
          key: v2-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # build packages
      - run:
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - project/node_modules
            - project/packages/helpers/dist
            - project/packages/helpers/node_modules
            - project/packages/hooks/dist
            - project/packages/hooks/node_modules
            - project/packages/icons/dist
            - project/packages/icons/node_modules
            - project/packages/ui/dist
            - project/packages/ui/node_modules

      # prettier and linter
      - run:
          command: yarn prettier-all
      - run:
          command: yarn lint:eslint:fix


      # test and coverage
      - run:
          name: Run Jest and Collect Coverage Reports
          command: yarn test --maxWorkers=2 --collectCoverage=true
      - store_artifacts:
          path: .jest-coverage/coverage-final.json


  deploy:
    docker: *docker
    environment: *environment
    parallelism: 4
    steps:
      - checkout

      # build packages
      - run:
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - project/node_modules
            - project/packages/helpers/dist
            - project/packages/helpers/node_modules
            - project/packages/hooks/dist
            - project/packages/hooks/node_modules
            - project/packages/icons/dist
            - project/packages/icons/node_modules
            - project/packages/ui/dist
            - project/packages/ui/node_modules

      # deploy to heroku
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build:
    jobs:
      - main

  build-deploy:
    jobs:
      - deploy:
          context: globals
          filters:
            branches:
              only: master # only run deploy-via-git job on master branch
